str(df)
# change the data type of fecha_efecto to date
df$fecha_efecto <- as.Date(df$fecha_efecto, format = "%Y-%m-%d")
# see the data type of data
str(df)
df$fecha_efecto <- as.Date(df$fecha_efecto, format = "%Y-%m-%d")
df$fecha_apertura_chantier <- as.Date(df$fecha_apertura_chantier, format = "%Y-%m-%d")
df$fecha_inicio_cobertura <- as.Date(df$fecha_inicio_cobertura, format = "%Y-%m-%d")
df$fecha_vencimiento <- as.Date(df$fecha_vencimiento, format = "%Y-%m-%d")
# see the data type of data
str(df)
# draw a graph where we can see the evolution of fecha_efecto and sumas_aseguradas with gg_plot
ggplot(df, aes(x = fecha_efecto, y = sumas_aseguradas)) + geom_point() + geom_smooth()
# Graph fecha_efecto and parte_aceptada
ggplot(df, aes(x = fecha_efecto, y = parte_aceptada)) + geom_point() + geom_smooth()
# Graph fecha_efecto and parte_aceptada
ggplot(df, aes(x = fecha_efecto, y = parte_aceptada)) + geom_point()
# Graph fecha_efecto and sumas_aseguradas
ggplot(df, aes(x = fecha_efecto, y = sumas_aseguradas)) + geom_point() + geom_smooth()
# Graph fecha_efecto and tasa_prima
ggplot(df, aes(x = fecha_efecto, y = tasa_prima)) + geom_point() + geom_smooth()
# Graph fecha_efecto and tasa_prima, with tipo_riesgo as color
ggplot(df, aes(x = fecha_efecto, y = tasa_prima, color = tipo_riesgo)) + geom_point() + geom_smooth()
# Graph fecha_efecto and tasa_prima, with tipo_riesgo as color
ggplot(df, aes(x = fecha_efecto, y = tasa_prima, color = tipo_riesgo)) + geom_point()
# Graph fecha_efecto and tasa_prima, with compania_cedente as color
ggplot(df, aes(x = fecha_efecto, y = tasa_prima, color = compania_cedente)) + geom_point()
# Graph fecha_efecto and tasa_prima, with compania_cedente as color
ggplot(df, aes(x = fecha_efecto, y = tasa_prima, color = centro_suscripcion)) + geom_point()
# Graph tasa_prima in a boxplot by tipo_riesgo
ggplot(df, aes(x = tipo_riesgo, y = tasa_prima)) + geom_boxplot()
# Graph tasa_prima in a boxplot by tipo_riesgo
ggplot(df, aes(x = tipo_riesgo, y = compania_cedente)) + geom_boxplot()
# Graph tasa_prima in a boxplot by tipo_riesgo
ggplot(df, aes(x = compania_cedente, y = tasa_prima)) + geom_boxplot()
# Graph tasa_prima in a boxplot by compania_cedente volteando 45 grados el eje x
ggplot(df, aes(x = compania_cedente, y = tasa_prima)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df, aes(x = tipo_riesgo, y = tasa_prima)) + geom_boxplot()
+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df, aes(x = tipo_riesgo, y = tasa_prima))
+ geom_boxplot()
+ geom_boxplot()
ggplot(df, aes(x = tipo_riesgo, y = tasa_prima))
+ geom_boxplot()
# Graph tasa_prima in a boxplot by tipo_riesgo
ggplot(df, aes(x = tipo_riesgo, y = tasa_prima)) + geom_boxplot()
# Graph tasa_prima in a boxplot by compania_cedente volteando 45 grados el eje x
ggplot(df, aes(x = compania_cedente, y = tasa_prima)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Graph tasa_prima in a boxplot by tipo_riesgo
ggplot(df, aes(x = tipo_riesgo, y = tasa_prima)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Graph fecha_efecto and tasa_prima, with compania_cedente as color
ggplot(df, aes(x = fecha_efecto, y = tasa_prima, color = compania_cedente)) + geom_point()
# Graph tasa_prima in a boxplot by compania_cedente
ggplot(df, aes(x = compania_cedente, y = tasa_prima)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Graph tasa_prima in a boxplot by tipo_riesgo
ggplot(df, aes(x = tipo_riesgo, y = tasa_prima)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Graph fecha_efecto and tasa_prima, with tipo_riesgo as color
ggplot(df, aes(x = fecha_efecto, y = tasa_prima, color = tipo_riesgo)) + geom_point()
# Graph fecha_efecto and tasa_prima
ggplot(df, aes(x = fecha_efecto, y = tasa_prima)) + geom_point() + geom_smooth()
# Graph tasa_prima in a boxplot by tipo_riesgo
ggplot(df, aes(x = tipo_riesgo, y = tasa_prima)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Graph tasa_prima in a boxplot by compania_cedente
ggplot(df, aes(x = compania_cedente, y = tasa_prima)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
analisis_balanceo <- function(df, columna) {
df %>%
count(!!sym(columna)) %>%
ggplot(aes(x = reorder(!!sym(columna), -n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = paste("Distribución de", columna),
x = columna,
y = "Frecuencia") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
}
# Generar los gráficos de balanceo de clases
analisis_balanceo(df, "tipo_riesgo")
analisis_balanceo(df, "compania_cedente")
library(dplyr)
# Análisis de distribución de clases
analisis_balanceo <- function(df, columna) {
df %>%
count(!!sym(columna)) %>%
ggplot(aes(x = reorder(!!sym(columna), -n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = paste("Distribución de", columna),
x = columna,
y = "Frecuencia") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
}
# Generar los gráficos de balanceo de clases
analisis_balanceo(df, "tipo_riesgo")
analisis_balanceo(df, "compania_cedente")
# Generar los gráficos de balanceo de clases
analisis_balanceo(df, "tipo_riesgo")
library(magrittr)
# Class balance by column
analisis_balanceo(df, "tipo_riesgo")
analisis_balanceo(df, "compania_cedente")
analisis_balanceo(df, "centro_suscripcion")
# Get class balance
class_balance <- function(df, columna) {
df %>%
count(!!sym(columna)) %>%
ggplot(aes(x = reorder(!!sym(columna), -n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = paste("Distribución de", columna),
x = columna,
y = "Frecuencia") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
}
# Class balance by column
class_balance(df, "tipo_riesgo")
class_balance(df, "compania_cedente")
class_balance(df, "centro_suscripcion")
class_balance <- function(df, columna) {
df %>%
count(!!sym(columna)) %>%
ggplot(aes(x = reorder(!!sym(columna), -n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = paste("Distribución de", columna),
x = columna,
y = "Frecuencia") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
# Class balance by column
class_balance(df, "tipo_riesgo")
class_balance(df, "compania_cedente")
class_balance(df, "centro_suscripcion")
# Graph sumas_aseguradas and tasa_prima
ggplot(df, aes(x = sumas_aseguradas, y = tasa_prima)) + geom_point()
# Graph sumas_aseguradas and tasa_prima
ggplot(df, aes(x = parte_asegurada, y = tasa_prima)) + geom_point()
# Graph sumas_aseguradas and tasa_prima
ggplot(df, aes(x = sumas_aseguradas_scor, y = tasa_prima)) + geom_point()
# Graph sumas_aseguradas and tasa_prima
ggplot(df, aes(x = sumas_aseguradas_scor, y = sumas_aseguradas_scor)) + geom_point()
# Graph sumas_aseguradas and tasa_prima
ggplot(df, aes(x = sumas_aseguradas_scor, y = sumas_aseguradas)) + geom_point()
# Graph fecha_efecto and tasa_prima, with compania_cedente as color
ggplot(df, aes(x = fecha_efecto, y = tasa_prima, color = compania_cedente)) + geom_point()
##### tasa_prima con variables continuas #####
# Graph sumas_aseguradas and tasa_prima
ggplot(df, aes(x = sumas_aseguradas, y = tasa_prima)) + geom_point()
# Graph fecha_efecto and tasa_prima, with tipo_riesgo as color
ggplot(df, aes(x = fecha_efecto, y = tasa_prima, color = tipo_riesgo)) + geom_point()
# Graph fecha_efecto and tasa_prima
ggplot(df, aes(x = fecha_efecto, y = tasa_prima)) + geom_point() + geom_smooth()
# hist of rows by year of fecha_efecto
ggplot(df, aes(x = fecha_efecto)) + geom_histogram(binwidth = 365)
class_balance(df, "compania_cedente")
# boxplot de la variable tasa_prima
ggplot(df, aes(y = tasa_prima)) + geom_boxplot()
# Outliers in tasa_prima
df %>%
ggplot(aes(x = tasa_prima)) +
geom_boxplot() +
theme_minimal()
# Drop outliers in df
df <- df %>%
filter(tasa_prima > 0 & tasa_prima < 25)
df %>%
ggplot(aes(x = tasa_prima)) +
geom_boxplot() +
theme_minimal()
df %>%
summarise(
q1 = quantile(tasa_prima, 0.25),
q3 = quantile(tasa_prima, 0.75),
iqr = q3 - q1,
lower = q1 - 1.5 * iqr,
upper = q3 + 1.5 * iqr
)
# load data
df <- read_excel("bbdd.xls", sheet = "Negocio Proporcional")
# check data
head(df)
# check number of rows and columns
dim(df)
######################################################
################## Transformations ###################
######################################################
# change column names
new_names <- c(
"centro_suscripcion", "filial", "gestion", "unidad_suscr", "unidad_gestion",
"codigo_facultativo", "estado", "gestion_2", "suscr", "ejercicio",
"fecha_efecto", "fecha_apertura_chantier", "fecha_inicio_cobertura",
"fecha_vencimiento", "asegurado", "riesgo", "producto", "top", "sector",
"tipo_riesgo", "compania_cedente", "pais_cedente", "grupo_intermediario",
"intermediario", "division", "tipo_contrato", "num_linea", "sumas_aseguradas",
"portee", "prioridad_franquicia", "tasa_prima", "aliment_global",
"parte_aceptada", "parte_scor", "aliment_scor", "sumas_aseguradas_scor",
"monto_limite_scor", "ecg", "divisa_ecg", "mercado", "pais_analisis", "trigger"
)
colnames(df) <- new_names
# change the data type
df$fecha_efecto <- as.Date(df$fecha_efecto, format = "%Y-%m-%d")
df$fecha_apertura_chantier <- as.Date(df$fecha_apertura_chantier, format = "%Y-%m-%d")
df$fecha_inicio_cobertura <- as.Date(df$fecha_inicio_cobertura, format = "%Y-%m-%d")
df$fecha_vencimiento <- as.Date(df$fecha_vencimiento, format = "%Y-%m-%d")
# see the data type of data
str(df)
df %>%
ggplot(aes(x = tasa_prima)) +
geom_boxplot() +
theme_minimal()
# check outliers with IC
df %>%
summarise(
q1 = quantile(tasa_prima, 0.25),
q3 = quantile(tasa_prima, 0.75),
iqr = q3 - q1,
lower = q1 - 2 * iqr,
upper = q3 + 2 * iqr
)
# check outliers with IC
df %>%
summarise(
q1 = quantile(tasa_prima, 0.25),
q3 = quantile(tasa_prima, 0.75),
iqr = q3 - q1,
lower = q1 - 2.5 * iqr,
upper = q3 + 2.5 * iqr
)
# Check outliers with IQR
df %>%
summarise(
q1 = quantile(tasa_prima, 0.25),
q3 = quantile(tasa_prima, 0.75),
iqr = q3 - q1,
lower = q1 - 2.5 * iqr,
upper = q3 + 2.5 * iqr
)
# Outliers in tasa_prima
df %>%
ggplot(aes(x = tasa_prima)) +
geom_boxplot() +
theme_minimal()
# Drop outliers in df
df <- df %>%
filter(tasa_prima > 0 & tasa_prima < 25)
# df without outliers
df %>%
ggplot(aes(x = tasa_prima)) +
geom_boxplot() +
theme_minimal()
# sumarise data
df %>%
summarise(
mean_tasa_prima = mean(tasa_prima),
sd_tasa_prima = sd(tasa_prima),
min_tasa_prima = min(tasa_prima),
max_tasa_prima = max(tasa_prima)
)
# sumarise data
df %>%
summarise(
mean_tasa_prima = mean(tasa_prima),
sd_tasa_prima = sd(tasa_prima),
min_tasa_prima = min(tasa_prima),
median_tasa_prima = median(tasa_prima),
max_tasa_prima = max(tasa_prima)
)
df %>%
summarise(
mean_tasa_prima = mean(tasa_prima),
sd_tasa_prima = sd(tasa_prima),
min_tasa_prima = min(tasa_prima),
median_tasa_prima = median(tasa_prima),
max_tasa_prima = max(tasa_prima)
)
df %>%
summarise(
mean_tasa_prima = mean(tasa_prima),
sd_tasa_prima = sd(tasa_prima),
min_tasa_prima = min(tasa_prima),
median_tasa_prima = median(tasa_prima),
max_tasa_prima = max(tasa_prima)
)
# df without outliers
df %>%
ggplot(aes(x = tasa_prima)) +
geom_boxplot() +
theme_minimal()
# summarise data
df %>%
summarise(
mean_tasa_prima = mean(tasa_prima),
sd_tasa_prima = sd(tasa_prima),
min_tasa_prima = min(tasa_prima),
q2_tasa_prima = quantile(tasa_prima, 0.75),
median_tasa_prima = median(tasa_prima),
q3_tasa_prima = quantile(tasa_prima, 0.75),
max_tasa_prima = max(tasa_prima)
)
# summarise data
df %>%
summarise(
mean_tasa_prima = mean(tasa_prima),
sd_tasa_prima = sd(tasa_prima),
min_tasa_prima = min(tasa_prima),
q2_tasa_prima = quantile(tasa_prima, 0.25),
median_tasa_prima = median(tasa_prima),
q3_tasa_prima = quantile(tasa_prima, 0.75),
max_tasa_prima = max(tasa_prima)
)
# summarise data
df %>%
summarise(
mean_tasa_prima = mean(tasa_prima),
sd_tasa_prima = sd(tasa_prima),
min_tasa_prima = min(tasa_prima),
q1_tasa_prima = quantile(tasa_prima, 0.25),
median_tasa_prima = median(tasa_prima),
q3_tasa_prima = quantile(tasa_prima, 0.75),
max_tasa_prima = max(tasa_prima)
)
quantile(tasa_prima, 0.25)
quantile(df$tasa_prima, 0.25)
quantile(df$tasa_prima, 0.25) - 1.5 * (quantile(df$tasa_prima, 0.75) - quantile(df$tasa_prima, 0.25))
quantile(df$tasa_prima, 0.75) + 1.5 * (quantile(df$tasa_prima, 0.75) - quantile(df$tasa_prima, 0.25))
quantile(df$tasa_prima, 0.25) - 2.5 * (quantile(df$tasa_prima, 0.75) - quantile(df$tasa_prima, 0.25))
quantile(df$tasa_prima, 0.75) + 2.5 * (quantile(df$tasa_prima, 0.75) - quantile(df$tasa_prima, 0.25))
quantile(df$tasa_prima, 0.25) - 3 * (quantile(df$tasa_prima, 0.75) - quantile(df$tasa_prima, 0.25))
quantile(df$tasa_prima, 0.75) + 2.5 * (quantile(df$tasa_prima, 0.75) - quantile(df$tasa_prima, 0.25))
# load data
df <- read_excel("bbdd.xls", sheet = "Negocio Proporcional")
# check data
head(df)
# check number of rows and columns
dim(df)
######################################################
################## Transformations ###################
######################################################
# change column names
new_names <- c(
"centro_suscripcion", "filial", "gestion", "unidad_suscr", "unidad_gestion",
"codigo_facultativo", "estado", "gestion_2", "suscr", "ejercicio",
"fecha_efecto", "fecha_apertura_chantier", "fecha_inicio_cobertura",
"fecha_vencimiento", "asegurado", "riesgo", "producto", "top", "sector",
"tipo_riesgo", "compania_cedente", "pais_cedente", "grupo_intermediario",
"intermediario", "division", "tipo_contrato", "num_linea", "sumas_aseguradas",
"portee", "prioridad_franquicia", "tasa_prima", "aliment_global",
"parte_aceptada", "parte_scor", "aliment_scor", "sumas_aseguradas_scor",
"monto_limite_scor", "ecg", "divisa_ecg", "mercado", "pais_analisis", "trigger"
)
colnames(df) <- new_names
# change the data type
df$fecha_efecto <- as.Date(df$fecha_efecto, format = "%Y-%m-%d")
df$fecha_apertura_chantier <- as.Date(df$fecha_apertura_chantier, format = "%Y-%m-%d")
df$fecha_inicio_cobertura <- as.Date(df$fecha_inicio_cobertura, format = "%Y-%m-%d")
df$fecha_vencimiento <- as.Date(df$fecha_vencimiento, format = "%Y-%m-%d")
# see the data type of data
str(df)
# Get class balance
class_balance <- function(df, columna) {
df %>%
count(!!sym(columna)) %>%
ggplot(aes(x = reorder(!!sym(columna), -n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = paste("Distribución de", columna),
x = columna,
y = "Frecuencia") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
# Class balance by column
class_balance(df, "tipo_riesgo")
class_balance(df, "compania_cedente")
class_balance(df, "centro_suscripcion")
q1 = quantile(df$tasa_prima, 0.25)
q3 = quantile(df$tasa_prima, 0.75)
iqr = q3 - q1
lower_bound = q1 - 1.5 * iqr
upper_bound = q3 + 1.5 * iqr
lower_bound
upper_bound
lower_bound = q1 - 2.5 * iqr
upper_bound = q3 + 2.5 * iqr
lower_bound
upper_bound
df %>%
filter(tasa_prima > lower_bound & tasa_prima < upper_bound)
# Drop outliers in df
df_no_outliers <- df %>%
filter(tasa_prima > lower_bound & tasa_prima < upper_bound)
df_no_outliers
dim(df_no_outliers)
dim(df)
# Outliers in tasa_prima
df %>%
ggplot(aes(x = tasa_prima)) +
geom_boxplot() +
theme_minimal()
# Get outliers with IQR
q1 = quantile(df$tasa_prima, 0.25)
q3 = quantile(df$tasa_prima, 0.75)
iqr = q3 - q1
lower_bound = q1 - 3 * iqr
upper_bound = q3 + 3 * iqr
# Drop outliers in df
df_no_outliers <- df %>%
filter(tasa_prima > lower_bound & tasa_prima < upper_bound)
dim(df_no_outliers)
dim(df)
# load data
df <- read_excel("bbdd.xls", sheet = "Negocio Proporcional")
# check data
head(df)
# check number of rows and columns
dim(df)
dim(df)
df_no_outliers <- df %>%
filter(tasa_prima > lower_bound & tasa_prima < upper_bound)
# Drop outliers in df
df_no_outliers <- df %>%
filter(tasa_prima > lower_bound & tasa_prima < upper_bound)
######################################################
######### Working directory and libraries ############
######################################################
# set working directory
setwd("/Users/jjmilla/Repositorios/master-umh-stat/master-umh-stat/TFM")
# check path or working directory
getwd()
# load libraries
library(readxl)
library(ggplot2)
library(dplyr)
library(magrittr)
######################################################
################## Load data #########################
######################################################
# load data
df <- read_excel("bbdd.xls", sheet = "Negocio Proporcional")
# check data
head(df)
# check number of rows and columns
dim(df)
######################################################
################## Transformations ###################
######################################################
# change column names
new_names <- c(
"centro_suscripcion", "filial", "gestion", "unidad_suscr", "unidad_gestion",
"codigo_facultativo", "estado", "gestion_2", "suscr", "ejercicio",
"fecha_efecto", "fecha_apertura_chantier", "fecha_inicio_cobertura",
"fecha_vencimiento", "asegurado", "riesgo", "producto", "top", "sector",
"tipo_riesgo", "compania_cedente", "pais_cedente", "grupo_intermediario",
"intermediario", "division", "tipo_contrato", "num_linea", "sumas_aseguradas",
"portee", "prioridad_franquicia", "tasa_prima", "aliment_global",
"parte_aceptada", "parte_scor", "aliment_scor", "sumas_aseguradas_scor",
"monto_limite_scor", "ecg", "divisa_ecg", "mercado", "pais_analisis", "trigger"
)
colnames(df) <- new_names
# change the data type
df$fecha_efecto <- as.Date(df$fecha_efecto, format = "%Y-%m-%d")
df$fecha_apertura_chantier <- as.Date(df$fecha_apertura_chantier, format = "%Y-%m-%d")
df$fecha_inicio_cobertura <- as.Date(df$fecha_inicio_cobertura, format = "%Y-%m-%d")
df$fecha_vencimiento <- as.Date(df$fecha_vencimiento, format = "%Y-%m-%d")
# see the data type of data
str(df)
# Get class balance
class_balance <- function(df, columna) {
df %>%
count(!!sym(columna)) %>%
ggplot(aes(x = reorder(!!sym(columna), -n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = paste("Distribución de", columna),
x = columna,
y = "Frecuencia") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
# Class balance by column
class_balance(df, "tipo_riesgo")
class_balance(df, "compania_cedente")
class_balance(df, "centro_suscripcion")
df_no_outliers <- df %>%
filter(tasa_prima > lower_bound & tasa_prima < upper_boun
dim(df_no_outliers)
dim(df_no_outliers)
dim(df)
upper_bound
df %>%
ggplot(aes(x = tasa_prima)) +
geom_boxplot() +
theme_minimal()
df_no_outliers %>%
ggplot(aes(x = tasa_prima)) +
geom_boxplot() +
theme_minimal()
df_no_outliers %>%
summarise(
mean_tasa_prima = mean(tasa_prima),
sd_tasa_prima = sd(tasa_prima),
min_tasa_prima = min(tasa_prima),
q1_tasa_prima = quantile(tasa_prima, 0.25),
median_tasa_prima = median(tasa_prima),
q3_tasa_prima = quantile(tasa_prima, 0.75),
max_tasa_prima = max(tasa_prima)
)
